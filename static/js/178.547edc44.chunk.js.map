{"version":3,"file":"static/js/178.547edc44.chunk.js","mappings":"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","sources":["views/Home.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCol,\n  CRow,\n  CCard,\n  CCardHeader,\n  CCardFooter,\n  CCardBody,\n  CCardText,\n  CButton,\n  CForm,\n  CFormInput,\n  CContainer,\n  CImage,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilClock } from '@coreui/icons'\nimport Datetime from 'react-datetime'\nimport 'react-datetime/css/react-datetime.css'\nimport logo from '../assets/images/level-up-arrow-logo-gold.png'\n\nconst Home = () => {\n  let [selected_time, onChange] = useState(new Date())\n  const [title, setTitle] = useState('Time Remaining')\n  const handleChange = (event) => {\n    setTitle(event.target.value)\n  }\n  const redirect = (time, title) => {\n    window.location = window.location.href + '#/countdown?until=' + time + '&title=' + title\n  }\n  function calcBreak(breakAmt) {\n    const timeToAdd = breakAmt * 60 * 1000\n    let curTime = new Date()\n    selected_time = new Date(curTime.getTime() + timeToAdd)\n    return selected_time\n  }\n  return (\n    <CContainer sm>\n      <CRow>\n        <CCol>\n          <CImage src={logo} width={100} height={100} />\n        </CCol>\n      </CRow>\n      <CCard color=\"secondary\" textColor=\"dark\" className=\"shadow m-2 rounded\">\n        <CCardHeader className=\"fs-1 h1\">Countdown Timer</CCardHeader>\n        <CCardBody>\n          <CCardText className=\"fs-4\">\n            Choose a date and time below, then click the button to create your sharable timer.\n          </CCardText>\n          <CForm>\n            <CRow xs={{ cols: 1 }}>\n              <CCol className=\"mt-2\">\n                <CFormInput\n                  id=\"titlefield\"\n                  type=\"text\"\n                  label=\"Title\"\n                  placeholder=\"Time remaining\"\n                  onChange={handleChange}\n                  value={title}\n                  size=\"sm\"\n                  className=\"fs-5\"\n                />\n              </CCol>\n              <CCol className=\"mt-2\">\n                <label className=\"form-label\">\n                  <CIcon icon={cilClock} />\n                  &nbsp; Target Time\n                </label>\n                <Datetime\n                  initialViewMode=\"time\"\n                  initialValue={new Date()}\n                  value={selected_time}\n                  onChange={onChange}\n                  input={false}\n                  size=\"sm\"\n                />\n                <div className=\"form-text\">Must be a time in the future.</div>\n              </CCol>\n            </CRow>\n            <CRow className=\"justify-content-center\" xs={{ cols: 2 }} sm={{ cols: 5 }}>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-dark\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(5))\n                    }}\n                  >\n                    5 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-dark\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(10))\n                    }}\n                  >\n                    10 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-dark\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(13))\n                    }}\n                  >\n                    13 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-dark\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(20))\n                    }}\n                  >\n                    20 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <div className=\"d-grid gap-2\">\n                <CCol>\n                  <div className=\"d-grid gap-2\">\n                    <CButton\n                      className=\"mt-4 btn-dark\"\n                      size=\"sm\"\n                      onClick={(event) => {\n                        event.preventDefault()\n                        onChange(calcBreak(60))\n                      }}\n                    >\n                      1 Hour\n                    </CButton>\n                  </div>\n                </CCol>\n              </div>\n            </CRow>\n          </CForm>\n        </CCardBody>\n        <CCardFooter>\n          <div className=\"d-grid gap-2\">\n            <CButton\n              color=\"warning\"\n              size=\"lg\"\n              onClick={(e) => redirect(selected_time.toISOString(), title)}\n            >\n              Start Timer\n            </CButton>\n          </div>\n        </CCardFooter>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default Home\n"],"names":["_useState","useState","Date","_useState2","_slicedToArray","selected_time","onChange","_useState3","_useState4","title","setTitle","calcBreak","breakAmt","timeToAdd","curTime","getTime","_jsxs","CContainer","sm","children","_jsx","CRow","CCol","CImage","src","logo","width","height","CCard","color","textColor","className","CCardHeader","CCardBody","CCardText","CForm","xs","cols","CFormInput","id","type","label","placeholder","event","target","value","size","CIcon","icon","cilClock","Datetime","initialViewMode","initialValue","input","CButton","onClick","preventDefault","CCardFooter","e","time","window","location","href","redirect","toISOString"],"sourceRoot":""}