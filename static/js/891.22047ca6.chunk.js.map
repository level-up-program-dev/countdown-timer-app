{"version":3,"file":"static/js/891.22047ca6.chunk.js","mappings":"sRAmHA,UA/Fa,WACX,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAAIG,MAA/C,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,kBAAnC,eAAOM,EAAP,KAAcC,EAAd,KAOA,OACE,UAAC,KAAD,CAAOC,MAAM,QAAQC,UAAU,qBAA/B,WACE,SAAC,KAAD,CAAaA,UAAU,OAAvB,4BACA,UAAC,KAAD,YACE,SAAC,KAAD,kGAGA,mBACA,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAI,CAAEC,KAAM,GAAlB,WACE,UAAC,KAAD,YACE,mBAAOF,UAAU,aAAjB,WACE,SAAC,IAAD,CAAOG,KAAMC,EAAAA,IADf,oBAIA,SAAC,IAAD,CACEC,gBAAgB,OAChBC,aAAc,IAAIZ,KAClBa,MAAOZ,EACPC,SAAUA,KAEZ,gBAAKI,UAAU,YAAf,+CAEF,UAAC,KAAD,YACE,SAAC,KAAD,CACEA,UAAU,OACVD,MAAM,OACNS,KAAK,KACLC,MAAM,eACNC,QAAS,SAACC,GACRA,EAAMC,iBACNnB,GAAYD,EACb,EARH,gCAYA,UAAC,KAAD,CAAWA,QAASA,EAApB,WACE,eAAIQ,UAAU,UACd,SAAC,KAAD,CACEa,GAAG,aACHC,KAAK,OACLC,MAAM,QACNC,YAAY,iBACZC,KAAK,WACLrB,SAlDK,SAACe,GACpBb,EAASa,EAAMO,OAAOX,MACvB,EAiDeA,MAAOV,WAIb,UAAC,KAAD,YACE,eAAIG,UAAU,UACd,mBAAOA,UAAU,aAAjB,WACE,SAAC,IAAD,CAAOG,KAAMgB,EAAAA,IADf,iBAIA,gBAAKnB,UAAU,sBAAf,UACE,SAAC,IAAD,CACEO,MACEa,OAAOC,SAASC,KAChB,qBACAC,OAAO5B,EAAc6B,eACrB,UACA3B,kBAQd,SAAC,KAAD,WACE,gBAAKG,UAAU,eAAf,UACE,SAAC,KAAD,CACED,MAAM,UACNS,KAAK,KACLE,QAAS,SAACe,GAAD,OA9EF,SAACC,EAAM7B,GACtBuB,OAAOC,SAAWD,OAAOC,SAASC,KAAO,qBAAuBI,EAAO,UAAY7B,CACpF,CA4EyB8B,CAAShC,EAAc6B,cAAe3B,EAA7C,EAHX,+BAWT,C","sources":["views/Home.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCol,\n  CRow,\n  CCard,\n  CCardHeader,\n  CCardFooter,\n  CCardBody,\n  CCardText,\n  CCollapse,\n  CButton,\n  CForm,\n  CFormInput,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilClock, cilShareAlt } from '@coreui/icons'\nimport QRCode from 'react-qr-code'\nimport Datetime from 'react-datetime'\nimport 'react-datetime/css/react-datetime.css'\n\nconst Home = () => {\n  const [visible, setVisible] = useState(false)\n  const [selected_time, onChange] = useState(new Date())\n  const [title, setTitle] = useState('Time Remaining')\n  const handleChange = (event) => {\n    setTitle(event.target.value)\n  }\n  const redirect = (time, title) => {\n    window.location = window.location.href + '#/countdown?until=' + time + '&title=' + title\n  }\n  return (\n    <CCard color=\"light\" className=\"shadow m-2 rounded\">\n      <CCardHeader className=\"fs-1\">Set Countdown</CCardHeader>\n      <CCardBody>\n        <CCardText>\n          Choose a date and time below, then click the button to create your sharable timer.\n        </CCardText>\n        <hr />\n        <CForm>\n          <CRow xs={{ cols: 1 }}>\n            <CCol>\n              <label className=\"form-label\">\n                <CIcon icon={cilClock} />\n                &nbsp; Datetime\n              </label>\n              <Datetime\n                initialViewMode=\"time\"\n                initialValue={new Date()}\n                value={selected_time}\n                onChange={onChange}\n              />\n              <div className=\"form-text\">Must be a time in the future.</div>\n            </CCol>\n            <CCol>\n              <CButton\n                className=\"mt-4\"\n                color=\"dark\"\n                size=\"sm\"\n                shape=\"rounded-pill\"\n                onClick={(event) => {\n                  event.preventDefault()\n                  setVisible(!visible)\n                }}\n              >\n                View more options\n              </CButton>\n              <CCollapse visible={visible}>\n                <hr className=\"mt-3\" />\n                <CFormInput\n                  id=\"titlefield\"\n                  type=\"text\"\n                  label=\"Title\"\n                  placeholder=\"Time remaining\"\n                  text=\"Optional\"\n                  onChange={handleChange}\n                  value={title}\n                />\n              </CCollapse>\n            </CCol>\n            <CCol>\n              <hr className=\"mt-3\" />\n              <label className=\"form-label\">\n                <CIcon icon={cilShareAlt} />\n                &nbsp; Share\n              </label>\n              <div className=\"mx-auto text-center\">\n                <QRCode\n                  value={\n                    window.location.href +\n                    '#/countdown?until=' +\n                    String(selected_time.toISOString()) +\n                    '&title=' +\n                    title\n                  }\n                />\n              </div>\n            </CCol>\n          </CRow>\n        </CForm>\n      </CCardBody>\n      <CCardFooter>\n        <div className=\"d-grid gap-2\">\n          <CButton\n            color=\"primary\"\n            size=\"lg\"\n            onClick={(e) => redirect(selected_time.toISOString(), title)}\n          >\n            Start Timer\n          </CButton>\n        </div>\n      </CCardFooter>\n    </CCard>\n  )\n}\n\nexport default Home\n"],"names":["useState","visible","setVisible","Date","selected_time","onChange","title","setTitle","color","className","xs","cols","icon","cilClock","initialViewMode","initialValue","value","size","shape","onClick","event","preventDefault","id","type","label","placeholder","text","target","cilShareAlt","window","location","href","String","toISOString","e","time","redirect"],"sourceRoot":""}